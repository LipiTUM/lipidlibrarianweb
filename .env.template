# backend build variables
# Commit hash to fix a specific package version
# Remember to rebuild the backend container if you change these variables,
# since they are only applied at build time.
LIPIDLIBRARIAN_GITHUB_COMMIT_REF=v0.2.0

# backend runtime variables
# For a development environment set DJANGO_DEBUG to 1, DJANGO_LOG_LEVEL to "DEBUG";
# for a production environment set DJANGO_DEBUG to 0, DJANGO_LOG_LEVEL to "INFO",
# and a secure DB_PASSWORD and DJANGO_SECRET_KEY.
# For deployment with docker compose set DJANGO_ALLOWED_HOSTS to "backend" and DB_HOST to "db";
# for deployment with podman or kubernetes set DJANGO_ALLOWED_HOSTS to "localhost" and
# DB_HOST to "localhost".
DJANGO_DEBUG=1
DJANGO_SECRET_KEY=foo
DJANGO_ALLOWED_HOSTS=localhost
DJANGO_LOG_LEVEL=WARNING
DB_HOST=localhost
DB_PORT=5432
DB_NAME=django
DB_USER=django
DB_PASSWORD=foo
BACKEND_PORT=81

# frontend build variables
# For a development environment set ANGULAR_BUILD_CONFIGURATION to "development";
# for a production environment set ANGULAR_BUILD_CONFIGURATION to "production".
# With FRONTEND_DEST you can set a custom destination as the lipid librarian root,
# for example with FRONTEND_DEST=lipidlibrarian the url will become
# https://www.example.com/lipidlibrarian/; for security reasons, angular needs
# to be compiled with this variable and it cannot be changed at runtime.
# Remember to rebuild the frontend container if you change these variables,
# since they are only applied at build time.
ANGULAR_BUILD_CONFIGURATION=development
APP_URL_DEST=

# frontend runtime variables
# For deployment with docker compose set BACKEND_HOSTNAME to "backend";
# for deployment with podman or kubernetes set BACKEND_HOSTNAME to "localhost".
# See the file frontend/nginx/default.conf.template for how these variables are
# applied.
FRONTEND_PORT=80
BACKEND_PORT=81
BACKEND_HOSTNAME=localhost
APP_TIMEZONE=Europe/Berlin

# docker compose / podman pod variables
APP_PORT=80
